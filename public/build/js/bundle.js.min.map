{"version":3,"sources":["1app.js","animaciones.js","dashboard.js","clientes.js","employee.js","graficas.js","paginaini.js","reportes.js","administrador/administracion.js","administrador/configuracion.js","servicios/editarservicios.js","servicios/servicios.js"],"names":["configdatatables","paging","lengthChange","searching","ordering","info","autoWidth","responsive","deferRender","retrieve","processing","language","search","emptyTable","zeroRecords","lengthMenu","infoEmpty","infoFiltered","paginate","first","last","next","previous","msjAlert","tipo","msj","divmsjalerta","insertAdjacentHTML","msjalertToast","icono","Swal","fire","icon","title","text","toast","position","showConfirmButton","timer","borrarMsjAlert","document","querySelector","setTimeout","firstChild","removeChild","querySelectorAll","forEach","element","textContent","dataset","num","previousElementSibling","value","length","addEventListener","e","target","cadena","slice","negocios","label","barra","bar","negocio","classList","add","toFixed","style","width","renderid","nextElementSibling","id","btns_navtabs","paginas","Element","pagina","remove","borrarhtml","elemento","horasdisponibles","firstElementChild","serviciosGlobal","async","url","respuesta","fetch","json","error","console","log","arrow","btn","index","toggle","x","switch","scrolnav","enlace","contains","scrollIntoView","behavior","crearcliente","editar","hab_desh","objform","titulo","submit","nombre","apellido","movil","email","formulariocliente","password","customClass","confirmButton","cancelButton","html","showCancelButton","countchars","tr","parentElement","children","mensaje","confirmButtonText","cancelButtonText","then","result","isConfirmed","window","location","crearempleado","dialogo","getElementById","dialogoSkills","btnupImage","btncustomUpImage","imginputfile","inputNombre","inputApellido","inputMovil","inputEmail","inputDepartamento","inputCiudad","inputDireccion","inputPerfil","tablaempleados","empleadosapi","unempleado","indiceFila","control","cerrarDialogoExterno","event","close","removeEventListener","$","DataTable","src","reset","showModal","click","file","this","files","reader","FileReader","onload","resrult","readAsDataURL","idempleado","tagName","find","img","departamento","ciudad","direccion","val","perfil","row","closest","editarEmpleado","checkbox","checked","idservicios","s","idservicio","empleadoSkills","page","datos","FormData","append","method","body","resultado","undefined","exito","start","draw","eliminarEmpleado","preventDefault","imgFile","includes","elements","type","size","datosActuales","data","rutaimg","arrayservicios","a","fechas","cierretotal","totalcitas","citasrealizadas","citascancelado","valorcitas","citas100","progreso","url1","respuesta1","resultado1","url2","respuesta2","resultado2","reverse","map","date","fecha","total","totaldia","filter","estado","reduce","parseInt","facturacion","ctx","getContext","Chart","labels","datasets","borderColor","backgroundColor","options","scales","y","beginAtZero","plugins","legend","display","printgrafica1","circle","strokeDashoffset","Math","round","animacioncircle","btnmenu","navmenu","reportes__btns","reportebtn","dia","i","disabled","entrada","puthoras","nextselect","subhora","split","hora","option","createElement","appendChild","select2","dropdownParent","dialogoEditarServicio","dialogoQuestion","cards","formUpdateServicio","List","valueNames","f","categoria","trigger","replace","eliminarServicio","card","Number","toLocaleString","crearCategoria","inconoscategoria","formCrearUpdateCategoria","inputnombreCT","inputimagenCT","tablacategorias","categoriaId","quitarresaltado","alt","focus","button","state","s1","cell","cambiarStateCategoria","Array","from","some","editarCategoria","idcategoria","eliminarCategoria","updateCategoriaApi"],"mappings":"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","file":"bundle.js","sourcesContent":["///////////////////// variables superglobales de todo el sistema /////////////////////\r\n//let serviciosglobal;\r\n\r\n///////////////////// OBJETO DE CONFIGURACION DEL PLUGIN DATATABLES /////////////////////\r\nconst configdatatables = {\r\n  \"paging\": true,\r\n  \"lengthChange\": true,\r\n  \"searching\": true,\r\n  \"ordering\": true,\r\n  \"info\": true,\r\n  \"autoWidth\": true,\r\n  \"responsive\": true,\r\n  \"deferRender\": true,\r\n  \"retrieve\": true,\r\n  \"processing\": true,\r\n  language: {\r\n      search: 'Busqueda',\r\n      emptyTable: 'No Hay datos disponibles',\r\n      zeroRecords:    \"No se encontraron registros coincidentes\",\r\n      lengthMenu: '_MENU_ Entradas por pagina',\r\n      info: 'Mostrando pagina _PAGE_ de _PAGES_',\r\n      infoEmpty: 'No hay entradas a mostrar',\r\n      infoFiltered: ' (filtrado desde _MAX_ registros)',\r\n      paginate: {\"first\": \"<<\", \"last\": \">>\", \"next\": \">\", \"previous\": \"<\"}\r\n  }\r\n}\r\n\r\n///////////////////// FUNCION QUE IMPRIME MENSAJE TIPO ALERTA /////////////////////\r\nfunction msjAlert(tipo, msj, divmsjalerta){\r\n  divmsjalerta.insertAdjacentHTML('beforeend', `<div class=\"alerta alerta__${tipo}\">\r\n      <p><i class=\"fa-solid fa-circle-exclamation\"></i> ${msj}</p></div>`\r\n  );\r\n}\r\n\r\n//////////////////// BORRAR MENSAJES TIPO ALERTA /////////////////////\r\n(borrarMsjAlert =()=>{  //se aplica de manera global\r\n  const msj = document.querySelector('#divmsjalerta');\r\n  if(document.querySelector('.alerta'))setTimeout(()=>{ while(msj.firstChild)msj.removeChild(msj.firstChild);}, 5000);\r\n})();\r\n\r\n//////////////////// FUNCION QUE IMPRIME UN MENSAJE FORMATO TOAST ////////////////////\r\n//msjalertToast('error', '¡Error!', 'debe seleccionar una imagen')\r\nfunction msjalertToast(icono, tipo, msj){\r\n    Swal.fire({\r\n    icon: icono,  // Puedes cambiar el ícono (success, error, warning, info, etc.)\r\n    title: tipo,\r\n    text: msj,\r\n    toast: true,\r\n    position: 'top-end',  \r\n    showConfirmButton: false,  \r\n    timer: 2700  \r\n    });\r\n}\r\n\r\n/////////////////// FUNCION CONTADOR DE CARACTERES ////////////////////\r\n(function countchars(){\r\n  const numinput = document.querySelectorAll('.count-charts');  \r\n  numinput.forEach(element =>{ //element es cada label\r\n      element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n      element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n          element.textContent = element.dataset.num-e.target.value.length;\r\n            \r\n          if(element.dataset.num-e.target.value.length <= 0){\r\n              let cadena = e.target.value.slice(0, element.dataset.num);\r\n              e.target.value = cadena;\r\n              element.textContent = 0;\r\n          }\r\n      });\r\n  });\r\n})();\r\n\r\n\r\n //////////////////////bar progress //////////////////////\r\n if(document.querySelector('.barraprogreso')){\r\n  const negocios = document.querySelectorAll('#negocio');\r\n  const label = document.querySelector('.barraprogreso__label');\r\n  const barra = document.querySelector('.barraprogreso__barra');\r\n  let bar = 0;\r\n  negocios.forEach(negocio=>{if(negocio.value)bar++;});\r\n  barra.classList.add('animation');\r\n  label.textContent = ((bar*100)/11).toFixed(1)+'%';\r\n  const animationbarra = document.querySelector('.animation');\r\n  animationbarra.style.width = label.textContent; //barra de progreso dinamicamente\r\n}\r\n\r\n\r\n/////////////////// paginacion de negocio empleado, malla, config //////////////////\r\nif(document.querySelector('#tabulacion')){ // view/admin/adminconfig/index.php\r\n  const renderid = document.querySelector('#tabulacion input[type=\"radio\"]:checked').nextElementSibling; //se selecciona el input cheked y luego su span q contiene el id de la pagina a mostrar\r\n  document.querySelector(`.${renderid.id}`).classList.add('mostrarseccion'); //mostramos la primera seccion\r\n  const btns_navtabs = document.querySelectorAll('.tabs span');\r\n  const paginas = document.querySelectorAll('.paginas'); //seleccionamos las secciones o paginas a mostrar\r\n  btns_navtabs.forEach(Element => {\r\n      Element.addEventListener('click', (e)=>{ //cada btn o enlace\r\n          paginas.forEach(pagina => pagina.classList.remove('mostrarseccion')); ////quitamos la class mostrarseccion a todas las secciones\r\n          document.querySelector(`.${e.target.id}`).classList.add('mostrarseccion'); //añadimos la class mostrarseccion a la la seccion o pagina correspondiente\r\n      });\r\n  });\r\n}\r\n\r\n///////////////////// borrar html ////////////////////////\r\nfunction borrarhtml(elemento){\r\n  horasdisponibles = [];\r\n  while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n}\r\n\r\n\r\nconst serviciosGlobal = async ()=>{ //funcion llamada en pack.js\r\n  try {\r\n      const url = \"/admin/api/getservices\"; //llamado a la API REST\r\n      const respuesta = await fetch(url); \r\n      const resultado = await respuesta.json();\r\n      return resultado;\r\n  } catch (error) {\r\n      console.log(error);\r\n  }\r\n}\r\n\r\n","//animacion de botones de alternancia de flecha\r\nif(document.querySelector('.btnrotated')){\r\n  const arrow = document.querySelectorAll('#arrow');\r\n  document.querySelectorAll('.btnrotated').forEach((btn, index) => {\r\n    btn.addEventListener('click', (e) => {\r\n      arrow[index].classList.toggle('rotated');\r\n      const x = document.querySelector(`DIV[data-switch=\"${e.target.dataset.switch}\"]`);\r\n      if(x)x.classList.toggle('showacordeon');\r\n    });\r\n  });\r\n}","document.addEventListener('DOMContentLoaded', function() {scrolnav(); });\r\n\r\nfunction scrolnav() {\r\n    const enlaces = document.querySelectorAll('.dashboard__menu a');  //selecicona el elemento nav y sus enelaces \r\n    enlaces.forEach( function(enlace){  //me recorre los enlaces del elemento NAV seleccionado \r\n        if(enlace.classList.contains('dashboard__enlace--actual')){\r\n            const seccion = document.querySelector('.'+enlace.firstElementChild.nextElementSibling.textContent);\r\n            seccion.scrollIntoView({behavior: 'smooth'});\r\n        } \r\n    });\r\n}\r\n/*\r\nfunction cerrarDialogoExterno(event, dialogo) {\r\n    console.log(event.target);\r\n    if (event.target === dialogo) {\r\n      dialogo.close();\r\n      document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n    }\r\n  }*/","(function(){\r\n    if(document.querySelector('.clientes')){\r\n        const crearcliente = document.querySelector('#crearcliente');\r\n        const editar = document.querySelectorAll('#editar');\r\n        const hab_desh = document.querySelectorAll('#hab_desh');\r\n        let objform = {\r\n            titulo: '',\r\n            url: '',\r\n            submit: '',\r\n            nombre: '',\r\n            apellido: '',\r\n            movil: '',\r\n            email: ''\r\n        }\r\n\r\n        crearcliente.addEventListener('click', ()=>{\r\n            objform.titulo = 'Crear Cliente Nuevo';\r\n            objform.url = '/admin/clientes/crear';\r\n            objform.submit = 'Crear Cliente';\r\n            objform.nombre = '';\r\n            objform.apellido = '';\r\n            objform.movil = '';\r\n            objform.email = '';\r\n            objform.password = `<div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"password\">Password</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"password\" placeholder=\"Password del cliente\" id=\"password\" name=\"password\" maxlength=\"4\" oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" required>\r\n                                        <label data-num=\"12\" class=\"count-charts\" for=\"\">12</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"password2\">Repetir Password</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"password\" placeholder=\"Repetir Password\" id=\"password2\" name=\"password2\" maxlength=\"4\" oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" required>\r\n                                        <label data-num=\"12\" class=\"count-charts\" for=\"\">12</label>\r\n                                    </div>\r\n                                </div>`;\r\n            formulariocliente(objform, 0);\r\n            countchars();\r\n        });\r\n\r\n        editar.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{\r\n                objform.titulo = 'Actualizar Cliente';\r\n                objform.url = '/admin/clientes/actualizar';\r\n                objform.submit = 'Actualizar';\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                objform.nombre = tr.children[1].textContent;\r\n                objform.apellido = tr.children[2].textContent;\r\n                objform.movil = tr.children[3].textContent;\r\n                objform.email = tr.children[4].textContent;\r\n                objform.password = '';\r\n                formulariocliente(objform, e.target.parentElement.dataset.id);\r\n                countchars();\r\n            });\r\n        });//cierre del foreach\r\n\r\n\r\n        function formulariocliente(objform, id){\r\n            let { titulo, url, submit, nombre, apellido, movil, email, password} = objform;\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: titulo,\r\n                html: `<form class=\"formulario modalform\" action=\"${url}\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${id}\" >\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nombre\">Nombre:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nombre del cliente\" id=\"nombre\" name=\"nombre\" value=\"${nombre}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"apellido\">Apellido:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Apellido del cliente\" id=\"apellido\" name=\"apellido\" value=\"${apellido}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"movil\">Movil</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"number\" placeholder=\"Movil del cliente\" id=\"movil\" name=\"movil\" value=\"${movil}\" required>\r\n                                    <label data-num=\"10\" class=\"count-charts\" for=\"\">10</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"email\">Email</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"email\" placeholder=\"Email del cliente\" id=\"email\" name=\"email\" value=\"${email}\" required>\r\n                                    <label data-num=\"40\" class=\"count-charts\" for=\"\">40</label>\r\n                                </div>\r\n                            </div>\r\n                            ${password}\r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"${submit}\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n        }\r\n\r\n        /////////////// eliminar cliente ////////////////\r\n\r\n        hab_desh.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n\r\n                let mensaje = \"Desea bloquear el cliente?\";\r\n                if(e.target.classList.contains('habilitar'))mensaje = \"Desea habilitar el cliente?\";\r\n\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: mensaje,\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        window.location = `/admin/clientes/hab_desh?id=${id}`;\r\n                    } \r\n                })\r\n            });\r\n        });\r\n    \r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        //countchars();\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n  if(document.querySelector('.empleado')){\r\n    const crearempleado = document.querySelector('#crearempleado');\r\n    const dialogo = document.getElementById(\"miDialogoEmpleado\");\r\n    const dialogoSkills = document.getElementById(\"miDialogoSkills\");\r\n    const btnupImage = document.querySelector('#upImage');\r\n    const btncustomUpImage = document.querySelector('#customUpImage');\r\n    const imginputfile = document.querySelector('#imginputfile');  //img\r\n\r\n    const inputNombre = document.querySelector('#nombre');\r\n    const inputApellido = document.querySelector('#apellido');\r\n    const inputMovil = document.querySelector('#movil ');\r\n    const inputEmail = document.querySelector('#email');\r\n    const inputDepartamento = document.querySelector('#departamento');\r\n    const inputCiudad = document.querySelector('#ciudad');\r\n    const inputDireccion = document.querySelector('#direccion');\r\n    const inputPerfil = document.querySelector('#perfil');\r\n\r\n    let indiceFila=0, control=0, tablaempleados, empleadosapi, unempleado;\r\n\r\n    /////////////////  traer todos los empleados con sus skills  ///////////////////\r\n    (async ()=>{\r\n      try {\r\n          const url = \"/admin/api/getAllemployee\"; //llamado a la API REST\r\n          const respuesta = await fetch(url); \r\n          empleadosapi = await respuesta.json(); \r\n          console.log(empleadosapi);\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n    })();\r\n\r\n    //////////////////  TABLA //////////////////////\r\n    tablaempleados = $('#tablaempleados').DataTable(configdatatables);\r\n\r\n    //////////////////// ventana modal al crear empleado  //////////////////////\r\n    crearempleado.addEventListener('click', (e)=>{\r\n      control = 0;\r\n      limpiarformdialog();\r\n      document.querySelector('#modalEmpleado').textContent = \"Crear empleado\";\r\n      document.querySelector('#btnEditarCrearEmpleado').value = \"Crear\";\r\n      dialogo.showModal();\r\n      document.addEventListener(\"click\", cerrarDialogoExterno);\r\n    });\r\n\r\n     //////////////////// Cargar imagen como preview  //////////////////////\r\n    btncustomUpImage.addEventListener('click', ()=>btnupImage.click());\r\n    btnupImage.addEventListener('change', function(){\r\n      const file = this.files[0];\r\n      if(file){\r\n        const reader = new FileReader();\r\n        reader.onload = function(){\r\n          const resrult = reader.result;\r\n          imginputfile.src = resrult;\r\n        } \r\n        reader.readAsDataURL(file);\r\n      }\r\n    });\r\n\r\n\r\n    document.querySelector('#tablaempleados').addEventListener(\"click\", (e)=>{ //evento click sobre toda la tabla\r\n      if(e.target.classList.contains(\"editarEmpleado\")||e.target.parentElement.classList.contains(\"editarEmpleado\"))editarEmpleado(e);\r\n      if(e.target.classList.contains(\"empleadoSkills\")||e.target.parentElement.classList.contains(\"empleadoSkills\"))empleadoSkills(e);\r\n      if(e.target.classList.contains(\"eliminarEmpleado\")||e.target.parentElement.classList.contains(\"eliminarEmpleado\"))eliminarEmpleado(e);\r\n    });\r\n\r\n    //////////////////// ventana modal al Actualizar/Editar empleado  //////////////////////\r\n    function editarEmpleado(e){\r\n      let idempleado = e.target.parentElement.id;\r\n      if(e.target.tagName === 'I')idempleado = e.target.parentElement.parentElement.id;\r\n      control = 1;\r\n      document.querySelector('#modalEmpleado').textContent = \"Actualizar Empleado\";\r\n      document.querySelector('#btnEditarCrearEmpleado').value = \"Actualizar\";\r\n      unempleado = empleadosapi.find(x => x.id==idempleado); //me trae al empleado seleccionado\r\n      imginputfile.src = \"/build/img/\"+unempleado.img;\r\n      inputNombre.value = unempleado.nombre;\r\n      inputApellido.value = unempleado.apellido;\r\n      inputMovil.value = unempleado.movil;\r\n      inputEmail.value = unempleado.email;\r\n      inputDepartamento.value = unempleado.departamento;\r\n      inputCiudad.value = unempleado.ciudad;\r\n      inputDireccion.value = unempleado.direccion;\r\n      $('#perfil').val(unempleado.perfil);\r\n      indiceFila = tablaempleados.row(e.target.closest('tr')).index();\r\n      dialogo.showModal();\r\n      document.addEventListener(\"click\", cerrarDialogoExterno);\r\n    }\r\n\r\n    ////////////////////  Actualizar/Editar empleado  //////////////////////\r\n    document.querySelector('#formCrearUpdateEmpleado').addEventListener('submit', e=>{\r\n      if(control){\r\n        e.preventDefault();\r\n        var imgFile=unempleado.img, info = tablaempleados.page.info();\r\n        if(!imginputfile.src.includes(unempleado.img)){ //cambio de imagen\r\n          imgFile = e.target.elements[\"upImage\"].files[0]; //obtengo el archivo\r\n          if(imgFile){\r\n            if(imgFile.type!==\"image/png\"&&imgFile.type!==\"image/jpeg\"){\r\n              msjAlert('error', 'No es un formato valido para la foto', document.querySelector('#divmsjalerta1'));\r\n              return;\r\n            }\r\n            if(imgFile.size>550000){ //si es mayor a 550KB\r\n              msjAlert('error', 'La imagen no debe superar los 500KB', document.querySelector('#divmsjalerta1'));\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        \r\n        (async ()=>{ \r\n          const datos = new FormData();\r\n          datos.append('idempleado', unempleado.id);\r\n          datos.append('img', imgFile); //en el backend no se lee con $_POST, se lee con $_FILES\r\n          datos.append('nombre', inputNombre.value);\r\n          datos.append('apellido', inputApellido.value);\r\n          datos.append('movil', inputMovil.value);\r\n          datos.append('email', inputEmail.value);\r\n          datos.append('departamento', inputDepartamento.value);\r\n          datos.append('ciudad', inputCiudad.value);\r\n          datos.append('direccion', inputDireccion.value);\r\n          datos.append('perfil', inputPerfil.value);\r\n          try {\r\n              const url = \"/admin/api/actualizarEmpleado\";\r\n              const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n              const resultado = await respuesta.json();  \r\n              if(resultado.exito !== undefined){\r\n                msjalertToast('success', '¡Éxito!', resultado.exito[0]);\r\n                /// actualizar el arregle del empleado ///\r\n                //\r\n                ///////// cambiar la fila completa, su contenido //////////\r\n                const datosActuales = tablaempleados.row(indiceFila+=info.start).data();\r\n                /*NOMBRE*/datosActuales[1] = inputNombre.value +' '+inputApellido.value;\r\n                /*img*/datosActuales[2] = `<div class=\"text-center\"><img style=\"width: 40px;\" src=\"/build/img/${resultado.rutaimg[0]}\" alt=\"\"></div>`;\r\n                /*MOVIL*/datosActuales[3] = inputMovil.value;\r\n                /*EMAIL*/datosActuales[4] = inputEmail.value;\r\n                /*CEDULA*/datosActuales[5] = ' ';\r\n                /*PERFIL*/datosActuales[6] = inputPerfil.value==1?'Empleado':inputPerfil.value==2?'Admin':'Propietario';\r\n                \r\n                tablaempleados.row(indiceFila).data(datosActuales).draw();\r\n                tablaempleados.page(info.page).draw('page'); //me mantiene la pagina actual\r\n              }else{\r\n                msjalertToast('error', '¡Error!', resultado.exito[0]);\r\n              }\r\n          } catch (error) {\r\n              console.log(error);\r\n          }\r\n        })();//cierre de async()\r\n      } //fin if(control)\r\n    });\r\n\r\n\r\n    ////////////////////  Actualizar skills del empleado  //////////////////////\r\n    function empleadoSkills(e){\r\n      let idempleado = e.target.parentElement.id;\r\n      if(e.target.tagName === 'I')idempleado = e.target.parentElement.parentElement.id;\r\n      document.querySelectorAll('.inputskills input[type=\"checkbox\"]').forEach(checkbox=>{checkbox.checked=false}); //limpia los checkbox\r\n      unempleado = empleadosapi.find(x => x.id==idempleado);\r\n      var{idservicios} = unempleado; //servicios es el arreglo con solo los skills\r\n      idservicios.forEach(s =>{\r\n        const inputskill = document.querySelector(`input[data-skillid=\"${s.idservicio}\"]`);\r\n        inputskill.checked = true;\r\n      });\r\n      dialogoSkills.showModal();\r\n      document.addEventListener(\"click\", cerrarDialogoExterno);\r\n    }\r\n\r\n    document.querySelector('#formSkills').addEventListener('submit', e=>{\r\n      e.preventDefault();\r\n      var arrayservicios = [];\r\n      document.querySelectorAll('.inputskills input[type=\"checkbox\"]').forEach(x=>{if(x.checked)arrayservicios = [...arrayservicios, x.value];});\r\n      (async ()=>{\r\n        const datos = new FormData();\r\n        datos.append('idempleado', unempleado.id);\r\n        datos.append('idservicio', arrayservicios);\r\n        try {\r\n            const url = \"/admin/api/actualizarSkillsEmpleado\";\r\n            const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n            const resultado = await respuesta.json();\r\n            if(resultado.exito !== undefined){\r\n              msjalertToast('success', '¡Éxito!', resultado.exito[0]);\r\n              /// actualizar el arregle de los skills \"empleadosapi\" ///\r\n              empleadosapi.forEach(elemento => {\r\n                if(elemento.id == unempleado.id)\r\n                  for(a=0; a<arrayservicios.length; a++)\r\n                    elemento.idservicios = [...elemento.idservicios, {idempleado: unempleado.id, idservicio: arrayservicios[a]}];\r\n              });\r\n\r\n            }else{\r\n              msjalertToast('error', '¡Error!', resultado.exito[0]);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n      })();\r\n    });\r\n\r\n\r\n    ////////////////////  Eliminar el empleado  //////////////////////\r\n    function eliminarEmpleado(e){\r\n      let idempleado = e.target.parentElement.id, info = tablaempleados.page.info();\r\n      if(e.target.tagName === 'I')idempleado = e.target.parentElement.parentElement.id;\r\n      indiceFila = tablaempleados.row(e.target.closest('tr')).index();\r\n      Swal.fire({\r\n          customClass: {confirmButton: 'sweetbtnconfirm', cancelButton: 'sweetbtncancel'},\r\n          icon: 'question',\r\n          title: 'Desea eliminar el empleado?',\r\n          text: \"El empleado sera eliminado definitivamente.\",\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Si',\r\n          cancelButtonText: 'No',\r\n      }).then((result) => {\r\n          if (result.isConfirmed) {\r\n              (async ()=>{ \r\n                  const datos = new FormData();\r\n                  datos.append('id', idempleado);\r\n                  try {\r\n                      const url = \"/admin/api/eliminarEmpleado\";\r\n                      const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                      const resultado = await respuesta.json();  \r\n                      if(resultado.exito !== undefined){\r\n                        Swal.fire(resultado.exito[0], '', 'success')\r\n                        tablaempleados.row(indiceFila+info.start).remove().draw(); \r\n                        tablaempleados.page(info.page).draw('page'); \r\n                      }else{\r\n                          Swal.fire(resultado.error[0], '', 'error')\r\n                      }\r\n                  } catch (error) {\r\n                      console.log(error);\r\n                  }\r\n              })();//cierre de async()\r\n          }\r\n      });\r\n    }\r\n\r\n\r\n    function cerrarDialogoExterno(event) {\r\n      if (event.target === dialogo || event.target === dialogoSkills || event.target.value === 'cancelar' || event.target.value === 'Actualizar') {\r\n          dialogo.close();\r\n          dialogoSkills.close();\r\n          document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n      }\r\n    }\r\n\r\n    function limpiarformdialog(){\r\n      imginputfile.src = ' ';\r\n      document.querySelector('#formCrearUpdateEmpleado').reset();\r\n    }\r\n\r\n  }\r\n})();","(function(){\r\n\r\n    const grafica = document.querySelector('#servicios-grafica');\r\n    if(grafica){\r\n       \r\n        let fechas, cierretotal, totalcitas, citasrealizadas, citascancelado, valorcitas=0; citas100=0, progreso=440;\r\n        (async ()=>{\r\n            try {\r\n                const url1 = \"/admin/api/alldays\"; //llamado a la API REST\r\n                const respuesta1 = await fetch(url1); \r\n                const resultado1 = await respuesta1.json(); \r\n                const url2 = \"/admin/api/totalcitas\";\r\n                const respuesta2 = await fetch(url2); \r\n                const resultado2 = await respuesta2.json(); \r\n            \r\n                resultado1.reverse();\r\n                fechas = resultado1.map(date => date.fecha);\r\n                cierretotal = resultado1.map(total => total.totaldia);\r\n\r\n                citascancelado = resultado2.filter(Element=>Element.estado==='Cancelado');\r\n                totalcitas = resultado2.length - citascancelado.length; //solo citas finalizadas o pendientes\r\n                \r\n                citasrealizadas = resultado2.filter(Element=>Element.estado==='Finalizada');\r\n\r\n                valorcitas = citasrealizadas.reduce((total, Element)=>total+parseInt(Element.facturacion.total), 0);\r\n                if(totalcitas)citas100 = (citasrealizadas.length*100)/totalcitas;\r\n                progreso = (440*citas100)/100;\r\n\r\n                printgrafica1();\r\n                animacioncircle();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        function printgrafica1(){\r\n            let a = ['#ea580c', '#84cc16', '#22d3ee', '#a855f7', '#ef4444', '#14b8a6', '#db2777', '#e11d48', '#7e22ce'];\r\n            //for(let i=0; i<(resultado.length-9); i++)a=[...a, a[i]];     //si los programas supera 9 se repite color \r\n\r\n            const ctx = document.getElementById('servicios-grafica').getContext('2d');\r\n            \r\n            new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: fechas,//resultado.map(programa=>programa.nombre),\r\n                    datasets: [{\r\n                    label: '# of Votes',\r\n                    data: cierretotal,//resultado.map(programa=>programa.total),\r\n                    borderColor: '#00c8c2',\r\n                    //backgroundColor: ['#ea580c', '#84cc16', '#22d3ee', '#a855f7'],\r\n                    backgroundColor: '#ea580c',\r\n                    //tension: 0.3,\r\n                    //stepped: 'middle',\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    },\r\n                    plugins: {legend: {display: false } } //elimina el label del dataset\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        function animacioncircle(){\r\n            const circle = document.querySelector('circle');\r\n            circle.style.strokeDashoffset = 440-progreso;\r\n            circle.classList.add('animacion');\r\n\r\n            const dailyearning = document.querySelector('.dailyearning').textContent = '$'+valorcitas;\r\n            const numero = document.querySelector('.rueda .numero');\r\n            numero.textContent = Math.round(citas100)+'%';\r\n        }\r\n        \r\n\r\n    } //cierre del if\r\n})();","(function(){\r\n    if(document.querySelector('.headerapp__menu')){\r\n        const btnmenu = document.querySelector('#btnmenu');\r\n        const navmenu = document.querySelector('.headerapp__navmenu');\r\n        btnmenu.addEventListener('click', ()=>{\r\n            navmenu.classList.toggle('mostrar');\r\n        });\r\n    }\r\n\r\n})();","(function(){\r\n\r\n    if(document.querySelector('.reportes')){\r\n        const reportes__btns = document.querySelectorAll('.reportes__btn');\r\n        const dialogo = document.getElementById(\"miDialogo\");\r\n        reportes__btns.forEach(reportebtn => {\r\n            reportebtn.addEventListener('click', ()=>{\r\n                dialogo.showModal();\r\n                document.addEventListener(\"click\", cerrarDialogoExterno);\r\n            });\r\n        });\r\n\r\n        function cerrarDialogoExterno(event) {\r\n            console.log(event.target);\r\n            if (event.target === dialogo) {\r\n              dialogo.close();\r\n              document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    \r\n    ///////////////////// habilita/deshabiita inputs de los dias de la malla de turnos con el checkbox/////////////\r\n    const dias = document.querySelectorAll(\".dia input[type=checkbox]\");\r\n    dias.forEach(dia => {\r\n        dia.addEventListener('change', function(e){\r\n            if(this.checked){\r\n                for(let i=0; i<4; i++)\r\n                e.target.parentElement.nextElementSibling.children[i].disabled = false;\r\n            }else{ \r\n                for(let i=0; i<4; i++)\r\n                e.target.parentElement.nextElementSibling.children[i].disabled = true;\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    ////////////////////// carga de horas en los select de la malla////////////////////////\r\n    const entradas = document.querySelectorAll('#entrada');\r\n    entradas.forEach(entrada =>{\r\n        entrada.addEventListener('change', (e)=>{\r\n            let nextselect = e.target.nextElementSibling; //select siguiente\r\n            puthoras(nextselect, e);\r\n        });\r\n    });\r\n\r\n    function puthoras(nextselect, e){\r\n        while(nextselect.firstChild)nextselect.removeChild(nextselect.firstChild);\r\n        let subhora = e.target.value.split(':');\r\n        let hora = parseInt(subhora[0]+subhora[1]);\r\n\r\n        for(let i = 0; hora<2300; i++){\r\n            let option = document.createElement('OPTION');\r\n            hora+=30;\r\n            if(hora%100 == 60)hora+=40;\r\n            option.value = hora;\r\n            subhora[0]= parseInt(hora/100);\r\n            subhora[1] = hora%100;\r\n            if(subhora[1] === 0)subhora[1] = \"00\";\r\n            option.textContent = subhora[0]+':'+subhora[1];\r\n            nextselect.appendChild(option);\r\n        }\r\n        nextselect.addEventListener('change', (e)=>{\r\n            let nextselect = e.target.nextElementSibling; //select siguiente\r\n            if(nextselect)puthoras(nextselect, e);\r\n        });\r\n    }\r\n\r\n    \r\n\r\n})();","(function(){\r\n    if(document.querySelector('.configAdd')){\r\n        let arraymediospago = [];\r\n        const inputmediospago = document.querySelectorAll('.mediospago__mediopago input[type=\"checkbox\"]');\r\n        const btnbtnmediopago = document.querySelector('#btnmediopago');\r\n        \r\n        \r\n        \r\n    }  //fin pagina 5 = configuracion\r\n})();","(function(){\r\n  if(document.querySelector('.editarservicios')){\r\n    $('#idcategoriaS').select2();\r\n    $('#updateCategoria').select2({dropdownParent: $(\"#miDialogoServicio\")});\r\n    const dialogoEditarServicio = document.getElementById(\"miDialogoServicio\");\r\n    const dialogoQuestion = document.getElementById(\"miDialogoQuestionService\");\r\n    const cards = document.querySelectorAll('.card-description');\r\n    const formUpdateServicio = document.querySelector('#formUpdateServicio');\r\n    \r\n    var options = {\r\n      valueNames: [ 'card-title', 'card-category']\r\n    };\r\n    var hackerList = new List('hacker-list', options);\r\n\r\n    //evento a card-description servicio\r\n    cards.forEach(card=>{\r\n      card.addEventListener('click', ()=>{\r\n        dialogoQuestion.children[0].children[0].textContent = card.querySelector('.card-price').textContent;\r\n        dialogoQuestion.children[0].children[1].textContent = card.querySelector('.card-title').textContent;\r\n        dialogoQuestion.children[0].children[2].textContent = card.querySelector('.updatedate').textContent;\r\n        dialogoQuestion.children[1].id = card.id;\r\n        dialogoQuestion.showModal();\r\n        document.addEventListener(\"click\", cerrarDialogoExterno);\r\n      });\r\n    });\r\n\r\n    function cerrarDialogoExterno(event) {\r\n      const f = event.target;\r\n      if (event.target === dialogoQuestion || event.target == dialogoEditarServicio || f.closest('.editarservicio') || f.closest('.eliminarservicio') || event.target.value === 'cancelar' || event.target.value === 'Actualizar'){\r\n          dialogoQuestion.close();\r\n          dialogoEditarServicio.close();\r\n          document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n          if(f.closest('.editarservicio')){\r\n            ///actualizar el servicio\r\n            cargardatos(f.closest('.editarservicio').parentElement.id);\r\n            dialogoEditarServicio.showModal();\r\n            document.addEventListener(\"click\", cerrarDialogoExterno);\r\n          }\r\n          if(f.closest('.eliminarservicio')){\r\n            //eliminar el servicio\r\n            eliminarServicio(f.closest('.eliminarservicio').parentElement.id);\r\n          } \r\n      }\r\n    } //fin cerrar dialogoExterno\r\n\r\n    // cargar datos del servicio en el modal de actualizar el servicio\r\n    function cargardatos(id){\r\n      var elemento = document.querySelector(`.card-description[id=\"${id}\"]`);\r\n      document.querySelector('#updateid').value = id;\r\n      $('#updateCategoria').val(elemento.dataset.categoria).trigger('change');\r\n      document.querySelector('#updatenombre').value = elemento.querySelector('.card-title').textContent;\r\n      $('#updateprecio').val(elemento.querySelector('.card-price').textContent.replace('.', '').slice(1));\r\n    }\r\n\r\n    formUpdateServicio.addEventListener('submit', (e)=>{\r\n      e.preventDefault();\r\n      const idservicio =  $('#updateid').val();\r\n      console.log(idservicio);\r\n      (async ()=>{ \r\n        const datos = new FormData();\r\n        datos.append('id', idservicio);\r\n        datos.append('idcategoriaS', $('#updateCategoria').val());\r\n        datos.append('nombre', $('#updatenombre').val());\r\n        datos.append('precio', $('#updateprecio').val()); \r\n        try {\r\n            const url = \"/admin/api/actualizarServicio\";\r\n            const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n            const resultado = await respuesta.json();  \r\n            if(resultado.exito !== undefined){\r\n              var card = document.querySelector(`.card-description[id=\"${idservicio}\"]`);\r\n              card.querySelector('.card-title').textContent = $('#updatenombre').val();\r\n              card.querySelector('.card-price').textContent = '$'+Number($('#updateprecio').val()).toLocaleString(); //con number y tolocalestring formateamos con puntos de miles\r\n              msjalertToast('success', '¡Éxito!', resultado.exito[0]);\r\n            }else{\r\n              msjalertToast('error', '¡Error!', resultado.error[0]);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n      })();//cierre de async() \r\n    });\r\n\r\n\r\n    function eliminarServicio(id){\r\n      Swal.fire({\r\n        customClass: {confirmButton: 'sweetbtnconfirm', cancelButton: 'sweetbtncancel'},\r\n        icon: 'question',\r\n        title: 'Desea eliminar el servicio?',\r\n        text: \"El servicio sera elminado y las citas deben reprogramarse!\",\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Si',\r\n        cancelButtonText: 'No',\r\n      }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            (async() =>{ //\r\n              const datos = new FormData();\r\n              datos.append('id', id);\r\n              try {\r\n                  const url = \"/admin/api/eliminarservicio\";\r\n                  const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                  const resultado = await respuesta.json();  \r\n                  if(resultado.exito !== undefined){\r\n                    Swal.fire(resultado.exito[0], '', 'success');\r\n                    const divservicio = document.querySelector(`.card-description[id=\"${id}\"]`).parentElement;\r\n                    divservicio.remove();\r\n                  }else{\r\n                    Swal.fire(resultado.error[0], '', 'error');\r\n                  }\r\n              } catch (error) {\r\n                  console.log(error);\r\n              }\r\n            })();\r\n          }\r\n      }); //fin swal.fire\r\n    }\r\n\r\n  }\r\n})();\r\n","(function(){\r\n    \r\n    if(document.querySelector('.servicios')){\r\n        //////////////////---- CATEGORIAS ----////////////////////\r\n        const crearCategoria = document.querySelector('#crearCategoria');\r\n        const dialogo = document.getElementById(\"miDialogoCategoria\");\r\n        const inconoscategoria = document.querySelectorAll('.icono-categoria');\r\n        const formCrearUpdateCategoria = document.querySelector('#formCrearUpdateCategoria');\r\n        const inputnombreCT = document.querySelector('#inputnombreCT');\r\n        const inputimagenCT = document.querySelector('#inputimagenCT');\r\n        let indiceFila=0, control=0, tablacategorias, categoriaId=0;\r\n\r\n        //////////////////  TABLA //////////////////////\r\n        tablacategorias = $('#tablacategorias').DataTable(configdatatables);  //configuracion del plugin datatable\r\n\r\n        ////////evento a los iconos de las categorias ////////\r\n        inconoscategoria.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n            const quitarresaltado = document.querySelector('.resaltar-icono');\r\n            if(quitarresaltado)quitarresaltado.classList.remove('resaltar-icono');\r\n            e.target.parentElement.classList.add('resaltar-icono');\r\n            var icono = e.target.alt;\r\n            if(e.target.tagName=='DIV')icono = e.target.firstElementChild.alt;\r\n            document.querySelector('#inputimagenCT').value = icono+'.png';\r\n            document.querySelector('#btnEnviarCrearCategoria').focus();\r\n            })\r\n        });\r\n\r\n        //////////////////// ventana modal al crear una categoria  //////////////////////\r\n        crearCategoria.addEventListener('click', (e)=>{\r\n            control = 0;\r\n            //e.preventDefault();\r\n            const quitarresaltado = document.querySelector('.resaltar-icono');\r\n            if(quitarresaltado)quitarresaltado.classList.remove('resaltar-icono');\r\n            limpiarformdialog();\r\n            dialogo.showModal();\r\n            document.addEventListener(\"click\", cerrarDialogoExterno);\r\n        });\r\n        \r\n        document.querySelector('#tablacategorias').addEventListener(\"click\", (e)=>{ //evento click sobre toda la tabla\r\n            if(e.target.classList.contains(\"stateCategoria\"))cambiarStateCategoria(e);\r\n            if(e.target.classList.contains(\"editarCategoria\")||e.target.parentElement.classList.contains(\"editarCategoria\"))editarCategoria(e);\r\n            if(e.target.classList.contains(\"eliminarCategoria\")||e.target.parentElement.classList.contains(\"eliminarCategoria\"))eliminarCategoria(e);\r\n        });\r\n\r\n        function cambiarStateCategoria(e){\r\n            const button=e.target, info = tablacategorias.page.info();\r\n            indiceFila = tablacategorias.row(button.closest('tr')).index();\r\n            (async ()=>{ \r\n                const datos = new FormData();\r\n                datos.append('id', button.id);\r\n                datos.append('estado', button.dataset.state==0?1:0);\r\n                try {\r\n                    const url = \"/admin/api/updateStateCategoria\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    if(resultado){\r\n                      const s1 = `<button id=\"${ button.id}\" data-state=\"${button.dataset.state==0?1:0}\" class=\"btn-md ${button.dataset.state==0?'btn-green':'btn-red'} stateCategoria\">${button.dataset.state==0?'Activo':'Inactivo'}</button>`;\r\n                      tablacategorias.cell(tablacategorias.row(indiceFila+=info.start), 5).data(s1).draw(); //se modifica solo la columna con la fila correspondiente, y destruye la que habai antes\r\n                      tablacategorias.page(info.page).draw('page'); //me mantiene la pagina actual\r\n                    } \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n              })();//cierre de async()\r\n        }\r\n\r\n        function editarCategoria(e){\r\n            let categoria = e.target.parentElement;\r\n            if(e.target.tagName === 'I')categoria = e.target.parentElement.parentElement;\r\n            const quitarresaltado = document.querySelector('.resaltar-icono');\r\n            if(quitarresaltado)quitarresaltado.classList.remove('resaltar-icono');\r\n            Array.from(document.querySelectorAll('.icono-categoria')).some((element) =>{\r\n                if(element.firstElementChild.alt == categoria.dataset.img.replace('.png', '')){\r\n                    element.classList.add('resaltar-icono');\r\n                    return true;\r\n                }\r\n            });\r\n            categoriaId = categoria.id;\r\n            inputnombreCT.value = categoria.dataset.nombre;\r\n            inputimagenCT.value = categoria.dataset.img;\r\n            control = 1;\r\n            dialogo.showModal();\r\n            indiceFila = tablacategorias.row(e.target.closest('tr')).index(); //obtener el indice de la fila de la tabla\r\n            document.addEventListener(\"click\", cerrarDialogoExterno);\r\n        }\r\n\r\n        formCrearUpdateCategoria.addEventListener('submit', e=>{\r\n            e.preventDefault();\r\n            if(!document.querySelector('.resaltar-icono')){\r\n                msjAlert('error', 'Debe seleccionar una imagen para la categoria', document.querySelector('#divmsjalerta1')); //funcion definida en 1app.js\r\n                borrarMsjAlert();  //Funcion definida en 1app.js\r\n                return;\r\n            }\r\n            if(control){updateCategoriaApi();\r\n            }else{ e.target.submit();}\r\n        });\r\n\r\n        function updateCategoriaApi(){\r\n            const info = tablacategorias.page.info();\r\n            (async ()=>{ \r\n                const datos = new FormData();\r\n                datos.append('id', categoriaId);\r\n                datos.append('nombre', inputnombreCT.value);\r\n                datos.append('imagen', inputimagenCT.value); \r\n                try {\r\n                    const url = \"/admin/api/actualizarCategoria\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    if(resultado.exito !== undefined){\r\n                      ///////// cambiar la fila completa, su contenido //////////\r\n                      const datosActuales = tablacategorias.row(indiceFila+=info.start).data();\r\n                      /*NOMBRE*/datosActuales[2] = inputnombreCT.value;\r\n                      /*IMAGEN*/datosActuales[3] = `<div class=\"text-center\"><img style=\"width: 40px;\" src=\"/build/img/iconos_categoria/${inputimagenCT.value}\"></div>`;\r\n                      /*ACCIONES*/datosActuales[7] = `<div class=\"acciones-btns\" id=\"${categoriaId}\" data-nombre=\"${inputnombreCT.value}\" data-img=\"${inputimagenCT.value}\">\r\n                                                        <button class=\"btn-md btn-turquoise editarCategoria\"><i class=\"fa-solid fa-pen-to-square\"></i></button><button class=\"btn-md btn-green editarServicios\"><i class=\"fa-solid fa-grip-vertical\"></i></button><button class=\"btn-md btn-red eliminarCategoria\"><i class=\"fa-solid fa-trash-can\"></i></button>\r\n                                                      </div>`;\r\n                      tablacategorias.row(indiceFila).data(datosActuales).draw();\r\n                      tablacategorias.page(info.page).draw('page'); //me mantiene la pagina actual\r\n                      dialogo.close(); //cerrar el modal\r\n                      msjalertToast('success', '¡Éxito!', resultado.exito[0]);\r\n                    }else{\r\n                      msjalertToast('error', '¡Error!', resultado.error[0]);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();//cierre de async()\r\n        }\r\n\r\n        function eliminarCategoria(e){\r\n            let idcategoria = e.target.parentElement.id;\r\n            if(e.target.tagName === 'I')idcategoria = e.target.parentElement.parentElement.id;\r\n            const info = tablacategorias.page.info();\r\n            indiceFila = tablacategorias.row(e.target.closest('tr')).index();\r\n            Swal.fire({\r\n                customClass: {confirmButton: 'sweetbtnconfirm', cancelButton: 'sweetbtncancel'},\r\n                icon: 'question',\r\n                title: 'Desea eliminar la categoria?',\r\n                text: \"Todos los servicios asociados a la categoria se eliminaran!\",\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    (async ()=>{ \r\n                        const datos = new FormData();\r\n                        datos.append('id', idcategoria);\r\n                        try {\r\n                            const url = \"/admin/api/eliminarCategoria\";\r\n                            const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                            const resultado = await respuesta.json();  \r\n                            if(resultado.exito !== undefined){\r\n                              ///////// eliminar la fila //////////\r\n                              tablacategorias.row(indiceFila+info.start).remove().draw(); //elimina la fila completa\r\n                              tablacategorias.page(info.page).draw('page'); //me mantiene la pagina actual\r\n                              Swal.fire(resultado.exito[0], '', 'success')\r\n                            }else{\r\n                                Swal.fire(resultado.error[0], '', 'error')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })();//cierre de async()\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        function cerrarDialogoExterno(event) {\r\n            if (event.target === dialogo || event.target.value === 'cancelar') {\r\n                dialogo.close();\r\n                document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n            }\r\n        }\r\n    \r\n        function limpiarformdialog(){\r\n            document.querySelector('#formCrearUpdateCategoria').reset();\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n})();"]}